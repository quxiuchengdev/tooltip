<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qxcwl.tooltip.dao.user.UserDao">

    <resultMap id="userResult" type="User">
        <id property="id" column="id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="username" column="username"></result>
        <result property="password" column="password"></result>
        <result property="email" column="email"></result>
        <result property="idCard" column="idCard"></result>
        <result property="sex" column="sex"></result>
        <result property="mobileNumber" column="mobileNumber"></result>
        <result property="telephone" column="telephone"></result>
        <result property="number" column="number"></result>
        <result property="userType" column="userType"></result>
        <result property="lastLoginIp" column="lastLoginIp"></result>
        <result property="lastLoginDate" column="lastLoginDate"></result>
        <result property="regisTime" column="regisTime"></result>
        <result property="regisPlace" column="regisPlace"></result>
        <result property="createBy.id" column="createBy.id"></result>
        <result property="createDate" column="createDate"></result>
        <result property="updateBy.id" column="updateBy.id"></result>
        <result property="updateDate" column="updateDate"></result>
        <result property="remarks" column="remarks"></result>
        <result property="history" column="history"></result>
        <result property="delFlag" column="delFlag"></result>
        <collection property="roleList" ofType="Role">
            <id property="id" column="roleList.id"></id>
        </collection>
    </resultMap>

	<sql id="userColumns">
    	a.id,
    	a.nickname,
    	a.username,
    	a.password,
    	a.email,
    	a.mobile_number as "mobileNumber",
		a.telephone,
		a.status,
		a.number,
		a.id_card as "idCard",
		a.sex,
		a.user_type as "userType",
		a.last_login_ip as "lastLoginIp",
		a.last_login_date as "lastLoginDate",
		a.regis_time as "regisTime",
		a.regis_place as "regisPlace",
		a.history,
		a.remarks,
		a.create_by AS "createBy.id",
		a.create_date,
		a.update_by AS "updateBy.id",
		a.update_date,
		a.del_flag,
		sr.id as "roleList.id",
		sr.name as "roleList.name"
    </sql>
	
	<sql id="userJoins">
        LEFT JOIN sys_user_role sur ON sur.user_id = a.id
		LEFT JOIN sys_role sr  ON sur.role_id = sr.id
    </sql>
    
    <select id="get" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultMap="userResult">
		SELECT
			<include refid="userColumns"/>
		FROM sys_user a
		<include refid="userJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
	</select>

	
	<insert id="insert">
		INSERT INTO sys_user(
			id,
	    	nickname,
	    	username,
	    	password,
	    	email,
	    	mobile_number,
			telephone,
			status,
			number,
			id_card,
			sex,
			user_type,
			last_login_ip,
			last_login_date,
			regis_time,
			regis_place,
			history,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			del_flag
		) VALUES (
			#{id}, 
			#{nickname}, 
			#{username}, 
			#{password},
			#{email},
			#{mobileNumber},
			#{telephone},
			#{status},
			#{number},
			#{idCard},
			#{sex},
			#{userType}, 
			#{lastLoginIp}, 
			#{lastLoginDate}, 
			#{regisTime}, 
			#{regisPlace}, 
			#{history},
			#{remarks},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_user SET 
			id = #{id},
	    	nickname = #{nickname},
	    	username = #{username},
	    	password = #{password},
	    	email = #{email},
	    	mobile_number = #{mobileNumber},
			telephone = #{telephone},
			status = #{status},
			number = #{number},
			id_card = #{idCard},
			sex = #{sex},
			user_type = #{userType},
			last_login_ip = #{lastLoginIp},
			last_login_date = #{lastLoginDate},
			regis_time = #{regisTime},
			regis_place = #{regisPlace},
			history = #{history},
			remarks = #{remarks},
			create_by = #{createBy.id},
			create_date = #{createDate},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			del_flag = #{delFlag}
		where id = #{id}
	</update>
	
	
	<update id="delete">
		UPDATE sys_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} 
	</update>

    <insert id="insertUserRole">

        <if test="roleList != null and roleList.size() &gt; 0 ">
            insert into sys_user_role ()
            <foreach collection="roleList" item="role" separator=" union all ">
                SELECT #{id}, #{role.id}
                <if test="dbName != 'mssql'">
                    FROM dual
                </if>
            </foreach>
        </if>
        <if test="roleList == null or roleList.size() == 0 ">
            select 0
        </if>
    </insert>

    <delete id="deleteUserRole">
        DELETE FROM sys_user_role WHERE user_id = #{id}
    </delete>
	
</mapper>